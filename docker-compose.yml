version: '3.9'

services:
  orderservice:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    ports:
      - "5001:8080"
      - "5002:8081"
    depends_on:
      inventoryservice:
        condition: service_started
      rabbitmq:
        condition: service_started
      sqlserver:
        condition: service_healthy

  inventoryservice:
    build:
      context: ./InventoryService
      dockerfile: Dockerfile
    ports:
      - "6001:8080"
      - "6002:8081"
    depends_on:
      - rabbitmq
      - sqlserver

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "123456Hi"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 123456Hi -Q 'SELECT 1' -C"]
      interval: 10s
      timeout: 5s
      retries: 15
      start_period: 30s

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"     # message broker
      - "15672:15672"   # management UI

  seq:
    image: datalust/seq:latest
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_NOAUTHENTICATION=true

  apigateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    ports:
      - "6000:8080"
    depends_on:
      - orderservice
      - inventoryservice

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
